@use 'sass:map';
@use 'variables';
@use 'helpers';

// globally used
@import "chaise-icon";
@import "markdown-container";
@import "buttons";
@import "button-group";
@import "inputs";
@import "modal";

// if we want to hide the page and then show navbar and content together
.wait-for-navbar {
  visibility: hidden;
}

.wait-for-navbar-loader {
  visibility: visible;
}

html {
  font-size: variables.$font-size;
}

.chaise-body {
  // TODO this might be problematic, we might want to be more specific to each app
  /****************** GLOBAL ******************/
  overflow: hidden;
  height: 100%;
  font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande",
    sans-serif;
  background-color: map-get(variables.$color-map, 'white');
  font-size: variables.$font-size;
  font-weight: 400;
  line-height: 1.428;

  h1,
  .h1-class {
    font-size: variables.$h1-font-size;
  }

  // in iframe we're making the headers smaller
  h2,
  .h2-class,
  &.chaise-iframe h1,
  &.chaise-iframe .h1-class {
    font-size: variables.$h2-font-size;
  }

  // in iframe we're making the headers smaller
  h3,
  .h3-class,
  &.chaise-iframe h2,
  &.chaise-iframe .h2-class {
    font-size: variables.$h3-font-size;
  }

  // in iframe we're making the headers smaller
  h4,
  .h4-class,
  &.chaise-iframe h3,
  &.chaise-iframe .h3-class {
    font-size: variables.$h4-font-size;
  }

  h1,
  h2,
  h3,
  h4,
  body {
    font-weight: 400;
  }

  h1,
  h2,
  h3,
  h4,
  .h1-class,
  .h2-class,
  .h3-class,
  .h4-class {
    line-height: 1.2;
  }

  // the bootstrap 3 style that is missing from boostrap 5
  h1 .small,
  h1 small,
  h2 .small,
  h2 small,
  h3 .small,
  h3 small,
  .h1-class small,
  .h2-class small,
  .h3-class small,
  .h4-class small {
    font-weight: 400;
    line-height: 1;
    color: #777;
    font-size: 65%;
  }

  li {
    list-style-type: none;
  }

  // show list style
  ul.show-list-style li {
    list-style-type: inherit;
  }

  .clickable {
    cursor: pointer;
  }

  // the last selector is added to override bootstrap default behavior
  a,
  a:not([href]):not([class]) {
    cursor: pointer;
    color: map-get(variables.$color-map, 'link');
    text-decoration: none;
  }
  // the last selector is added to override bootstrap default behavior
  a:focus,
  a:hover,
  a:not([href]):not([class]):hover {
    text-decoration: underline;
  }

  // make sure the code style is consistent with old bootstrap styles
  code {
    padding: 2px 4px;
    font-size: 90%;
    color: #c7254e;
    background-color: #f9f2f4;
    border-radius: 4px;
  }
  // make sure the pre style is consistent with old bootstrap styles
  pre {
    display: block;
    padding: 9.5px;
    margin: 0 0 10px;
    font-size: 13px;
    line-height: 1.42857143;
    color: #333;
    word-break: break-all;
    word-wrap: break-word;
    background-color: #f5f5f5;
    border: 1px solid #ccc;
    border-radius: 4px;
  }

  // TODO this is most probably not needed:
  .caret {
    border-top: 5px solid;
    border-right: 5px solid transparent;
    border-left: 5px solid transparent;
  }

  // modify the position of caret to be in the middle
  .dropdown-toggle::after {
    vertical-align: 0.12em;
    margin-left: 0.4em;
  }

  a.external-link-icon:not(:empty):not(.external-link-no-icon),
  a span.external-link-icon:not(:empty):not(.external-link-no-icon) {
    &::after {
      display: inline-block;
      font-size: 0.85rem;
      font-family: "Font Awesome 6 Free";
      font-weight: 900;
      content: "\f35d"; // fa-solid fa-up-right-from-square
      padding-left: 2px;
    }
  }

  .fullscreen-icon::after {
    font-family: 'Font Awesome 6 Free';
    font-weight: 900;
    content: '\f065'; // fa-solid fa-expand
  }

  // tooltip
  .chaise-icon-for-tooltip::after {
    line-height: 1; // fix

    vertical-align: text-top;
    display: inline-block;
    font-size: 0.85em;
    font-family: "chaise-icons";
    // NOTE: when there's a newline character, there is a space added to the
    // end of string text before the icon is added. when there is no newline,
    // the icon is directly next to the text.
    content: "\00A6";
  }
  .chaise-icon-for-tooltip.align-center-icon {
    line-height: 20px;
    vertical-align: middle;
    margin: 4px;
  }

  h1 .chaise-icon-for-tooltip::after {
    font-size: 0.6em;
    vertical-align: super;
  }

  .inline-tooltip {
    font-size: 16px;
  }

  #page-title .inline-tooltip {
    display: block;
    padding-left: 2px;
  }

  // make sure the tooltips don't go outside the view
  .tooltip {
    // (this is a predefined class in bootstrap)
    max-width: 50%;
    white-space: nowrap;
  }
  .tooltip-inner {
    // (this is a predefined class in bootstrap)
    text-align: left;
    max-width: none;
    white-space: pre-wrap;
  }
  .tooltip code,
  .tooltip-inner code {
    background: rgba(110, 118, 129);
    color: #fff;
    padding: 0.5px;
  }

  // disabled row and form
  .disabled-form,
  .disabled-row {
    color: map-get(variables.$color-map, 'disabled') !important;
  }

  .disabled-form *,
  .disabled-row * {
    color: inherit !important;
  }

  .disabled-form a,
  .disabled-row a {
    color: map-get(variables.$color-map, 'disabled') !important;
  }

  .disabled-form .remove-input-btn {
    /*the button used to clear the input*/
    display: none;
  }

  .remove-input-btn {
    /*the button used to clear an input field - clear-input-btn.tsx*/
    cursor: pointer;
    pointer-events: all;
  }

  .disabled-form .btn.btn-inverted[disabled]:hover {
    background-color: white !important;
    border-color: map-get(variables.$color-map, 'border') !important;
  }

  .disabled-element {
    cursor: not-allowed;

    &:active {
      pointer-events: none;
    }
  }

  // spinner
  .spinner-container:not(.bottom-left-spinner) {
    background: map-get(variables.$color-map, 'white');
    color: map-get(variables.$color-map, 'spinner');
    width: 130px;
    margin: 0 auto;
    text-align: center;
    padding: 14px 0;
    border: 1px solid map-get(variables.$color-map, 'border');
    border-radius: 7px;
    &:not(.manual-position-spinner) {
      top: 50vh;
      position: absolute;
      left: 50%;
      margin-top: -75px;
      margin-left: -75px;
      z-index: map-get(variables.$z-index-map, 'spinner');
    }
    .spinner-message {
      color: map-get(variables.$color-map, 'black');
      margin-top: 15px;
    }
  }
  .spinner-container.bottom-left-spinner {
    float: left;
    position: fixed;
    z-index: map-get(variables.$z-index-map, 'spinner');
    bottom: 0;
    background: #d9edf7;
    margin: 5px;
    padding: 5px 20px;
    border: solid #446c73 1.5px;
    .spinner-message {
      display: inline-block;
      margin-left: 5px;
    }
  }


  .forced-hidden {
    display: none !important;
  }

  /****************** HEADER ******************/

  // bookmark container start
  #page-title {
    margin: -7px 0 0;

    small {
      margin-left: 10px;
    }
  }

  #page-subtitle {
    margin: 0;

    .link-decoration {
      color: map-get(variables.$color-map, 'link');
    }
  }

  .recordedit-bookmark-container,
  .resultset-bookmark-container {
    padding: 15px 40px 10px;
    /* padding-left and padding-right sides are to equal the left and right paddings of .container-fluid */
    // background-color: #f1f1f1;
    // box-shadow: 0 4px 2px -2px rgba(0,0,0,0.4);

    > * {
      display: inline-block;
    }

    .pull-left {
      text-align: left;
    }

    .pull-right {
      text-align: right;
    }
  }

  .float-right {
    float: right;
  }
  // bookmark container end

  /* used to replace the margin with padding on h1-4 elements */
  .replace-margin {
    margin: 0;
    padding-top: 10px;
    padding-bottom: 10px;
  }

  // record and recordedit column headers
  .entity-key {
    color: #333333;
    font-weight: normal;
    font-size: 1rem;
    word-wrap: break-word;
  }

  // record and recordedit column values
  .entity-value {
    font-size: 1rem;
    color: #333;
  }

  // show more/show less ellipsis
  .hideContent {
    overflow: hidden;
    line-height: 20px;
  }

  .showContent {
    line-height: 20px;
    height: auto;
    display: inline;
  }

  // ellipsis for the texts
  // TODO we might want to rename this
  .ellipsis {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    vertical-align: middle;
  }

  // footer
  .footer-container {
    margin-top: auto;
    position: relative;

    &.position-absolute {
      position: absolute;
      bottom: 0;
      right: 0;
      left: 0;
    }

    margin-right: variables.$viewport-margin * -1;

    .footer-content {
      height: 30px;
      background-color: #ededed;
      padding-right: 5px;
      padding-left: 5px;
      padding-top: 5px;
      color: #595757;
      font-size: 11px;

      li {
        list-style-type: inherit;
      }

      ul {
        list-style-type: disc;
      }

      ol {
        list-style-type: decimal;
      }

      code {
        padding-left: 0;
        padding-right: 0;
        color: map-get(variables.$color-map, 'black');
        background-color: #f5f5f5;
      }
    }
  }

  // title
  .title-container {
    margin: 0;
    width: 100%;
    display: inline-block;

    h1 {
      margin: 0;
    }

    .title-buttons {
      float: right;
      text-align: right;

      // make sure the buttons show in the same line
      & > * {
        display: inline-block;
        margin-left: 5px;
      }

      // make sure the buttons that are link, are not showing any underline
      & a.chaise-btn {
        text-decoration: none;
      }
    }
  }

  // fix the padding issues related to the main alerts container that is outside of apps
  .app-header-container > .alerts-container {
    padding: variables.$viewport-margin;

    /**
     * having margin causes issues with the height logic, that's why we're trying
     * to avoid it with the following rules:
     */
    padding-bottom: 10px;
    &:empty {
      padding-bottom: 0;
    }
    .alert:last-child {
      margin: 0;
    }
  }

  // top panel container for record and recordset
  .top-panel-container {
    // NOTE the padding top has been moved to the rule above (.app-header-container > .alerts-container)
    // padding-top: variables.$viewport-margin;
    padding-right: variables.$viewport-margin;

    .alerts-container {
      padding-left: 20px;
    }

    .top-flex-panel {
      position: relative;
      display: flex;
      flex: 1;
      -webkit-box-flex: 1;

      .top-left-panel {
        position: relative;
        max-width: 40vw;
        margin-left: variables.$viewport-margin;

        &.open-panel {
          flex: 0;
          flex-basis: variables.$left-panel-width-lg;
          min-width: 170px;

          &.small-panel {
            flex-basis: variables.$left-panel-width-sm;
          }

          & + .top-right-panel {
            padding-left: variables.$main-alley;
          }
        }

        &.close-panel {
          width: 0;
          flex-basis: 0 !important;
          display: none;

          & + .top-right-panel {
            // NOTE this is done this way to make sure we're implementing
            // spacing the same way in top and bottom panels.
            // This is becuase we have js code that will look at the
            // clientWidth and the width of these two panels should be the same.
            padding-left: variables.$viewport-margin;
          }
        }

        .panel-header {
          width: 100%;
          position: absolute;
          bottom: 0;
          left: 0;

          display: flex;
          justify-content: space-between;

          h3 {
            margin: 0;
          }

          button {
            padding: 0;
            padding-bottom: 3px;
          }
        }
      }

      // end .top-left-panel

      .top-right-panel {
        flex: 1;
        position: relative;
        // added for the ellipsis logic for the title in case of modals
        min-width: 0;
      }
    }
  }

  // bottom panel container for record and recordset
  .bottom-panel-container {
    display: flex;
    flex: 1;
    -webkit-box-flex: 1;

    .side-panel-resizable {
      position: relative;
      max-width: 40vw;
      margin-left: variables.$viewport-margin;

      &.open-panel {
        flex: 0;
        flex-basis: variables.$left-panel-width-lg;
        min-width: 170px;

        &.small-panel {
          flex-basis: variables.$left-panel-width-sm;
        }

        & ~ .main-container {
          padding-left: variables.$main-alley;

          .footer-container:not(.position-absolute) {
            margin-left: variables.$main-alley * -1;
          }
        }
      }

      &.close-panel {
        width: 0;
        flex-basis: 0 !important;
        display: none;

        .side-panel-container {
          width: 0;
        }

        & ~ .main-container {
          // NOTE the padding is here and not on the parent because
          // of the footer behaviour that we want.
          // If we move it up, then the footer won't be displayed properly
          // when the side-panel is closed
          padding-left: variables.$viewport-margin;

          .footer-container:not(.position-absolute) {
            margin-left: variables.$viewport-margin * -1;
          }
        }
      }
    }

    .main-container {
      // the following two will make sure footer is pushed to bottom
      // (in combination with margin-top: auto of footer)
      display: flex;
      flex-direction: column;
      flex: 1;
      position: relative;
      overflow-x: hidden;
      overflow-y: auto;

      // we're going to adjust this dynamically for dynamic-padding
      &:not(.dynamic-padding) {
        padding-right: variables.$viewport-margin;
      }
    }
  }

  // NOTE general rule that applies to record and recordset
  // TODO duplicate or simplify
  .side-panel-resizable.close-panel + .divider-hitbox {
    display: none;
  }

  // copy to clipboard btn (used in share dialog)
  .chaise-copy-to-clipboard-btn {
    color: map-get(variables.$color-map, 'primary');
    font-size: 65%;
    cursor: pointer;
  }

  // chaise checkbox
  .chaise-checkbox {
    position: relative;

    label {
      padding-left: 25px;
      padding-right: 5px;
      font-weight: 400;
      position: relative;
      vertical-align: middle;
      min-height: variables.$chaise-checkbox-height;
      margin-bottom: 0;
    }
    &.no-left-padding label {
      padding-left: 0;
    }

    input {
      position: absolute;
      z-index: map-get(variables.$z-index-map, 'checkbox-input');
      cursor: pointer;
      width: variables.$chaise-checkbox-width;
      height: variables.$chaise-checkbox-height;
      top: 0;
      margin-top: 2px;

      &:disabled {
        cursor: not-allowed;
        &:before,
        &:checked:after {
          color: map-get(variables.$color-map, 'disabled');
          border-color: map-get(variables.$color-map, 'disabled');
        }
      }

      &:before,
      &:checked:after {
        color: map-get(variables.$color-map, 'primary');
        -webkit-transition: border 0.15s ease-in-out, color 0.15s ease-in-out;
        -o-transition: border 0.15s ease-in-out, color 0.15s ease-in-out;
        transition: border 0.15s ease-in-out, color 0.15s ease-in-out;
      }

      &:before {
        content: "";
        display: inline-block;
        position: absolute;
        width: variables.$chaise-checkbox-width;
        height: variables.$chaise-checkbox-height;
        left: 0;
        top: 0;
        border: 1px solid map-get(variables.$color-map, 'primary');
        border-radius: 3px;
        background-color: map-get(variables.$color-map, 'white');
      }

      &:checked:after {
        position: absolute;
        top: -2px;
        left: 2px;
        font-family: "Font Awesome 6 Free";
        font-weight: 900;
        content: "\f00c"; // fa-solid fa-check
        font-size: 1.3rem;
      }
    }
  }

  // ellipsis-text
  .ellipsis-text label {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  // favorite icon used for favorites in faceting->choice-picker->list and ellipsis action column
  .favorite-icon {
    top: 2px;
    margin-right: 8px;
    cursor: pointer;
    font-size: 18px;

    &.fa-solid.fa-star {
      color: goldenrod;
    }

    &.hover-show {
      visibility: hidden;
    }

    &.favorite-spinner-container {
      font-size: 1em;

      > .fa-circle-notch {
        cursor: not-allowed;
        font-size: 14px;
        padding-right: 0px;
        margin-right: 2px;
        margin-left: 2px;
      }
    }
  }

  // changes the color of alert fa-triangle-exclamation (used for timeout error)
  .fa-triangle-exclamation {
    color: map-get(variables.$color-map, 'warning') !important;
    border: none;
  }

  // spinner
  .fa-circle-notch {
    color: map-get(variables.$color-map, 'spinner');
  }

  /* Rule for Chrome */
  input[type="number"]::-webkit-inner-spin-button,
  input[type="number"]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  /* Rule for FF */
  input[type="number"] {
    -moz-appearance: textfield;
  }

  input[type="number"]::-moz-placeholder {
    line-height: 1.2;
  }

  .chaise-hr-scrollable {
    overflow-x: auto;
  }

  .chaise-table-top-scroll-wrapper {
    overflow-x: auto;
    overflow-y: hidden;
    height: 0;
    position: sticky;
    width: -moz-available;
    width: -webkit-fill-available;
    z-index: map-get(variables.$z-index-map, 'top-horzontal-scroll-wrapper');
    display: none;
  }

  .chaise-table-top-scroll {
    height: inherit;
    overflow-x: scroll;
  }

  /************* selected chiclets ***************/
  .chiclets-container {
    margin-bottom: 10px;

    .selected-chiclet {
      border: none;
      margin-right: 10px;
      padding-right: 0;
      display: inline-block;

      height: 25px;
      padding: 0;

      .selected-chiclet-remove {
        display: inline-block;
        cursor: pointer;
        padding-right: 3px;
        color: black;
        font-size: 1.3em;
        vertical-align: middle;
      }

      .selected-chiclet-name {
        display: inline-block;
        cursor: default;
        user-select: text;
        -webkit-user-select: text;
        -moz-user-select: text;
        -ms-user-select: text;

        /* forces one line chiclet */
        max-width: 240px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      // show-more/less and clear-all
      .selected-chiclets-btn {
        padding: 0;
        height: auto;
      }

      .selected-chiclet-name,
      .selected-chiclets-btn {
        vertical-align: middle;
        margin-top: -3px;
      }
    }
  }

  // section accordion (used both in record and recordedit)
  .chaise-accordions {
    $space-between-accordions: 5px;
    $row-focus-border-width: 2px;
    $chaise-accordion-content-padding-left: 40px;

    .panel-group {
      margin-bottom: 20px;
    }

    .chaise-accordion {
      // override the default bootstrap styles
      box-shadow: none;
      border-radius: 0;
      border: 0;
      + .chaise-accordion {
        margin-top: $space-between-accordions;
      }

      // row-focus will add a border of 2px,
      // - adding -2px margin to left and right to avoid shrinkage
      // - reducing the margin-top from 5px to 3px to avoid moving
      &.row-focus {
        margin-left: -$row-focus-border-width;
        margin-right: -$row-focus-border-width;
        margin-top: $space-between-accordions - $row-focus-border-width;

        + .chaise-accordion:not(.row-focus) {
          margin-top: $space-between-accordions - $row-focus-border-width;
        }

        // if there are two row-focus on top of each other, we should
        // change the margin to account for both of their borders.
        + .row-focus {
          margin-top: $space-between-accordions - ($row-focus-border-width * 2);
        }
      }

      // the first row doesn't have margin top
      &:first-child.row-focus {
        margin-top: -$row-focus-border-width;
      }

      .accordion-button {
        cursor: pointer;
        height: 44px;
        text-transform: inherit;
        padding: 8px 8px 8px 8px;
        color: map-get(variables.$color-map, 'white');
        border: none;
        border-radius: inherit;
        background: map-get(variables.$color-map, 'section-background');
        // Overriding accordian-button css to align right angle bracket icon to left
        flex-direction: row-reverse;
        justify-content: flex-end;

        &:focus {
          box-shadow: none;
        }

        // Overriding accordian-button css to align right angle bracket icon to left
        &::after {
          margin-right: 11px;
          margin-left: 2px;
          background-image: none;
          content: "\f054"; // fa-solid fa-chevron-right
          font-family: "Font Awesome 6 Free";
          font-weight: 900;
          transform: unset;
          font-size: 1.75rem;
          height: unset;
        }

        &:not(.collapsed)::after {
          content: "\f078"; // fa-solid fa-chevron-down
        }
      }

      .chaise-accordion-header {
        width: 100%;
        display: flex;
        justify-content: space-between;
        white-space: nowrap;
        min-width: 0; // needed to avoid overflow

        .chaise-accordion-displayname {
          font-size: 1.75rem;
          text-overflow: ellipsis;
          overflow: hidden;
        }

        .chaise-accordion-header-buttons {
          position: relative;
          padding-left: 20px;
          margin-top: 2px;

          .chaise-btn:not(:first-child) {
            margin-left: 5px;
          }

          a.chaise-btn {
            text-decoration: none;
          }

          .chaise-accordion-header-icons {
            position: absolute;
            left: 0;
            top: 5px;
          }
        }
      }

      .accordion-body {
        padding-left: $chaise-accordion-content-padding-left;
        padding-right: 0;
      }

      .inline-tooltip {
        margin-bottom: 10px;
      }
    }
  }

  // used both in record and help apps
  .back-to-top-btn {
    position: fixed;
    right: 40px;
    bottom: 40px;
    padding: 1px 4px;
    font-size: 25px;
    border-radius: 4px;
    height: 35px;
    width: 35px;
    cursor: pointer;
    overflow: hidden;
    z-index: map-get(variables.$z-index-map, 'back-to-top-btn');
  }

  // an spinner with backdrop blocking the whole app content
  .app-blocking-spinner-container {
    .app-blocking-spinner-backdrop {
      position: fixed;
      top: 0;
      left: 0;
      height: 100%;
      width: 100%;
      z-index: map-get(variables.$z-index-map, 'app-blocking-spinner-backdrop');
      background: black;
      opacity: 0.5;
    }
    .spinner-container {
      top: 50% !important;
      z-index: map-get(variables.$z-index-map, 'app-blocking-spinner') !important;
    }
  }

  /****** help pages *****/
  .help-container {
    .main-body .container {
      // in other apps .alerts-container is adding the padding-top
      padding-top: 20px;
      padding-bottom: 20px;
    }
  }

  /****** switch user accounts help page *******/
  .switch-user-accounts-container {
    li {
      list-style-type: unset;
    }
  }

  .chaise-image-preview {
    $chaise-image-preview-max-height: 50vh;

    position: relative;
    display: block;
    border: 1px solid map-get(variables.$color-map, 'border');
    text-align: center;

    /**
     * the container should take the whole width, and let
     * the content handle the height
     */
    width: 100%;
    height: auto;

    // image markdown might add an empty embed-caption
    .embed-caption:empty {
      display: none;
    }

    // markdown-container might add a margin, and we should get rid of it
    img {
      margin: 0;
    }

    &.zoomed-in {
      cursor: zoom-out;
      // make sure proper scrollbars are displayed
      overflow: auto;

      /**
       * when the image is zoomed in, we have to add the
       * max-height to the container instead of the img
       */
      max-height: $chaise-image-preview-max-height;
      img {
        max-height: unset;
        max-width: unset;
      }
    }

    &:not(.zoomed-in) {
      cursor: zoom-in;
      overflow: hidden;

      img {
        /**
         * set the height based on the width and aspect ratio
         * but at maximum it should be less than half the page
         */
        height: auto;
        max-height: $chaise-image-preview-max-height;
        /**
         * occupy the whole width if available,,
         * but no more than the container availabel space
         */
        max-width: 100%;
        // make sure the aspect ratio of image is preserved
        object-fit: contain;
      }
    }
  }
}
