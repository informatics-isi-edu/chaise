@use 'sass:map';
@use 'variables';
@use 'helpers';

// stylelint-disable selector-no-qualifying-type
// Make the div behave like a button
.chaise-btn-group,
.chaise-btn-group-vertical {
  position: relative;
  display: inline-flex;
  vertical-align: middle; // match .chaise-btn alignment given font-size hack above

  > .chaise-btn {
    position: relative;
    flex: 1 1 auto;
    // Bring the hover, focused, and "active" buttons to the front to overlay
    // the borders properly
    &.active,
    &:active,
    &:focus,
    &:hover {
      z-index: map-get(variables.$z-index-map, 'button-active');
    }
  }
}

/**
 * this rule will make sure the content are aligned with each other, but as a result the bounding box of each
 * button might be misaligned with the rest. so this only should be used when we're hiding the borders
 */
.chaise-btn-group-no-border {
  align-items: baseline; // to align it to the same line
}

// Changing this to grid to set maximum two rows of wrapping buttons if width is less
.chaise-btn-toolbar {
  gap: 5px;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px, max-content));

  .input-group {
    width: auto;
  }
}

.chaise-btn-group {
  // Prevent double borders when buttons are next to each other
  > .chaise-btn-group:not(:first-child):not([disabled]),
  > .chaise-btn:not(:first-child):not([disabled]) {
    margin-left: variables.$btn-border-width * -1;
  }
  // Reset rounded corners
  > .chaise-btn-group:not(:last-child) > .chaise-btn,
  > .chaise-btn:not(:last-child):not(.dropdown-toggle) {
    @include helpers.border-right-radius(0);
  }

  > .chaise-btn-group:not(:first-child) > .chaise-btn,
  > .chaise-btn:not(:first-child) {
    @include helpers.border-left-radius(0);
  }
}

//
// Vertical button groups
//
.chaise-btn-group-vertical {
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;

  > .chaise-btn-group,
  > .chaise-btn {
    width: 100%;
  }

  > .chaise-btn-group:not(:first-child),
  > .chaise-btn:not(:first-child) {
    margin-top: variables.$btn-border-width * -1;
  }
  // Reset rounded corners
  > .chaise-btn-group:not(:last-child) > .chaise-btn,
  > .chaise-btn:not(:last-child):not(.dropdown-toggle) {
    @include helpers.border-bottom-radius(0);
  }

  > .chaise-btn-group:not(:first-child) > .chaise-btn,
  > .chaise-btn:not(:first-child) {
    @include helpers.border-top-radius(0);
  }
}
