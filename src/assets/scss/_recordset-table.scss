@use 'sass:map';
@use 'variables';

.recordset-table {
  overflow-y: hidden;
}

.chaise-table.table, .chaise-table-sticky-header > table {
  border-top: 1px solid map.get(variables.$color-map, 'table-border');
  border-bottom: 1px solid map.get(variables.$color-map, 'table-border');
  margin: 0;

  // override the default bootstrap styles as we're going to apply our own styles below
  --bs-table-bg: transparent;
  --bs-table-accent-bg: transparent;
  --bs-table-striped-bg: transparent;
  --bs-table-active-bg: transparent;
  --bs-table-hover-bg: transparent;

  tbody {
    display: table-row-group;
    vertical-align: middle;

    /* table hover */
    > tr:hover {
      background-color: map.get(variables.$color-map, 'table-highlight-background') !important;

      .hover-show {
        visibility: visible;
      }
    }

    /* odd row hover for striped table */
    > tr:nth-child(odd):hover {
      background-color: map.get(variables.$color-map, 'table-striped-highlight-background') !important;
    }
  }

  tr {
    border-left: 1px solid map.get(variables.$color-map, 'table-border');
    border-bottom: none;
  }

  .table-heading {
    background-color: map.get(variables.$color-map, 'table-header-background');
    color: map.get(variables.$color-map, 'black');

    .actions-header {
      width: 100px;

      &.view-header {
        width: 50px;
      }

      &.single-select-header {
        width: 65px;
      }

      &.multi-select-header {
        button {
          display: block;
          width: 120px;
          &:first-child {
            margin-bottom: 5px;
          }
        }
      }
    }
  }

  // override bootstrap default
  & > :not(:first-child) {
    border: 0;
  }

  & > tbody > tr {
    position: unset !important;
  }

  & > tbody > tr:nth-child(odd) {
    background: map.get(variables.$color-map, 'table-striped-background');
  }

  > thead > tr > th {
    border-bottom: 1px solid map.get(variables.$color-map, 'table-border');
    white-space: nowrap;
  }

  > thead > tr > th,
  > tbody > tr > th,
  > tfoot > tr > th,
  > thead > tr > td,
  > tbody > tr > td,
  > tfoot > tr > td {
    border-top: none;
    border-bottom: none;
    border-right: 1px solid map.get(variables.$color-map, 'table-border');
    word-wrap: break-word;
  }

  > tbody > tr > td {
    padding: 5px;
    vertical-align: top;
  }

  th {
    font-weight: 400;
    border-top: 1px solid map.get(variables.$color-map, 'table-border');
    position: relative;

    &.actions-header {
      white-space: nowrap;
      text-align: center;
      font-size: variables.$h4-font-size;
      padding: 8px;
    }

    .table-column-displayname {
      font-size: variables.$h4-font-size;
    }

    // preserve space for the icon on the right
    // 20 for the "icon space"
    // 10 for the "right indentation"
    padding-right: 30px;
    .table-heading-icons {
      position: absolute;
      bottom: 7px;
      right: 10px;
      font-size: variables.$h4-font-size;

      .table-column-spinner {
        position: absolute;
        bottom: 2px;
        right: -5px;

        .spinner-border {
          // NOTE: we should not customize the width/height since it causes wobbling effect
          color: map.get(variables.$color-map, 'table-header-spinner');
          border-width: .16em;
        }
      }
    }
  }

  // Changing the padding and adding line-height for the action button to align with the rest of the columns in the table
  .action-btns {
    /**
     * the whole row min height is 30px, and buttons are 22px. so the space around the buttons must be 4px.
     * if we changed the button height, the checkbox-icon-margin should be adjusted as well.
     */
    $_button-height: 22px;
    $_space-around-buttons: 4px;
    $_checkbox-icon-margin: 2px;

    text-align: center;
    font-size: 1.2rem;
    padding: $_space-around-buttons 0 0 0;
    line-height: 1.5;

    // make sure items stay in the center
    .action-btns-inner-container {
      display: flex;
      align-content: center;
      justify-content: space-around;
    }

    /**
     * make sure there's similar space below the buttons in the narrow case (when the content is just one line
     * I needed to use three different selectors for our three different modes.
     * the first one is the default mode, the second is single select, and the last one is for multi-select
     */
    .chaise-btn-group, .chaise-btn.select-action-button, .chaise-checkbox {
      margin-bottom: $_space-around-buttons;
    }

    .chaise-btn.select-action-button {
      border-radius: 12px;

      &.chaise-btn-secondary {
        border-width: 2px;
      }

      &[disabled] {
        min-width: 12px;
        width: 12px;
        height: 12px;
        margin-top: 5px;
      }

      // change size of single select icon to "fill" the whole button
      .fa-regular.fa-circle, .fa-circle-check {
        font-size: 1.6rem;
        // added here instead of to the button as padding-top to only affect these buttons/icons
        margin-top: 1px;
        background-color: map.get(variables.$color-map, 'white') !important;
        border-radius: inherit;
      }
    }

    // make the button smaller (only visible for primary buttons. for others won't make a difference in UI and that's fine)
    .chaise-checkbox, .chaise-btn {
      padding: 0;
      height: $_button-height;
      min-width: $_button-height;
      width: $_button-height;
    }

    // make sure the checkbox has the same size as others for consistent spacing.
    .chaise-checkbox input {
      width: $_button-height;
      height: $_button-height;
      & + label:before {
        width: $_button-height;
        height: $_button-height;
      }
      &:checked + label:after {
        top: $_checkbox-icon-margin;
        left: $_checkbox-icon-margin;
      }
    }

    .chaise-view-details {
      // make the view icon bigger so it looks similar size to the rest of icons
      font-size: 1.1em;
    }

    .disabled {
      cursor: not-allowed;
      color: map.get(variables.$color-map, 'disabled');
    }

    .delete-loader {
      color: map.get(variables.$color-map, 'disabled');
    }
  }

  .full-col-span-row {
    text-align: center;
  }
}

.chaise-table-footer {
  text-align: center;
  margin-top: 10px;
}

.chaise-table-pagination {
  padding: 20px 0 50px 0;
  text-align: center;
  button {
    width: 75px;
    margin-left: 5px;
  }
}

.chaise-table-top-scroll-wrapper {
  position: sticky;
  top: 0;
  background-color: white;
}
.no-scroll-bar {
  display: none !important;
  position: absolute !important;
}
.chaise-table-sticky-header {
  position: fixed;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  overflow-x: hidden;
  // javascript will change the following:
  top: 0;
  visibility: hidden;
}

.chaise-table-sticky-header > table > thead > tr > th {
  padding: 7px;
  color: map.get(variables.$color-map, 'navbar-inverse');
}

.chaise-table-sticky-header .sticky-header-table {
  table-layout: fixed;
  width: 100%;
}

.app-content-container-scrollable .chaise-table-sticky-header {
  display: none;
}
