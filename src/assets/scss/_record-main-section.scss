@use 'sass:map';
@use 'variables';
@use 'helpers';

.record-container {

  .record-main-section {

    position: relative;

    &.with-spinner {
      margin-top: map-get(variables.$record-spacing-map, 'main-spinner-height') * -1;
    }
    .record-main-spinner-container {
      position: sticky;
      position: -webkit-sticky;
      top: min(50px, 50%);
      .record-main-spinner {
        height: map-get(variables.$record-spacing-map, 'main-spinner-height');
      }
    }

    > table {
      // prevents the content in record-table from pushing off the side of page
      table-layout: fixed;
      width: 100%;

      // reduce the spacing of table cells (overrides bootstrap default)
      > tbody > tr.row {
        border-top: map-get(variables.$record-spacing-map, 'record-table-cell-border-width') solid map-get(variables.$color-map, 'border');
        margin: 0px;

        > td {
          border-top: 0;
          padding: map-get(variables.$record-spacing-map, 'record-table-cell-padding');

          &.entity-value {
            overflow-wrap: break-word;
            border-bottom-width: 0px;
          }
        }

        // when the column header is hidden, align content with the
        // rest of headers
        &.hidden-header {
          > .entity-value {
            padding-left: map-get(variables.$record-spacing-map, 'record-header-padding-left');
          }
        }

        &.row-focus {
          // row-focus will change the border top and bottom size,
          // so we should adjust that and account for the default border
          td {
            $_row_focus_padding: map-get(variables.$record-spacing-map, 'record-table-cell-padding') - (map-get(variables.$record-spacing-map, 'row-focus-border-width') - map-get(variables.$record-spacing-map, 'record-table-cell-border-width'));
            padding-top: $_row_focus_padding;
            padding-bottom: $_row_focus_padding;

            // if the size of row-focus is bigger than the current border width,
            // we should adjust the content of inline tables so the whole page doesn't shift
            @if map-get(variables.$record-spacing-map, 'row-focus-border-width') > map-get(variables.$record-spacing-map, 'record-table-cell-border-width') {
              .inline-table-display {
                padding-bottom: map-get(variables.$record-spacing-map, 'row-focus-border-width');
              }
            }
          }

          // when there are two of them, the bottom should use the default padding
          + tr.row-focus td {
            padding-top:  map-get(variables.$record-spacing-map, 'record-table-cell-padding');
          }
        }

        .entity-key {
          padding-left: map-get(variables.$record-spacing-map, 'record-header-padding-left');
          border-bottom-width: 0px;
          position: relative;
          padding-right: 15px;

          .entity-key-icons {
            position: absolute;
            right: 0px;
            top: 5px;
            .spinner-border {
              color: #828282;
            }
          }
        }
      }
    }
  }
}
