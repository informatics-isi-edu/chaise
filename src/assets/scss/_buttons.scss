@use "sass:color";
@use 'sass:map';
@use 'variables';
@use 'helpers';

.chaise-btn {
  @include helpers.chaise-btn();

  &.chaise-btn-sm {
    @include helpers.chaise-btn-sm();
  }

  > .chaise-btn-icon + * {
    margin-left: 4px;
  }

  &.icon-btn {
    padding: 7px 5px;
    * {
      margin-right: 0;
    }
  }

  // don't show the default blue outline on focus
  &:focus {
    outline: none;
    box-shadow: none;
  }

  // show not-allowed cursor and not allow click
  &[disabled],
  &.disabled {
    cursor: not-allowed;
    &:active {
      pointer-events: none;
    }
  }

  // override bootstrap styles
  &.btn.disabled {
    opacity: unset;
    pointer-events: auto;
  }

  &.chaise-btn-primary {
    @include helpers.chaise-btn-primary();
  }

  &.chaise-btn-secondary {
    @include helpers.chaise-btn-secondary();
  }

  &.chaise-btn.chaise-btn-primary[disabled],
  &.chaise-btn.chaise-btn-secondary[disabled],
  &.chaise-btn.chaise-btn-primary.disabled,
  &.chaise-btn.chaise-btn-secondary.disabled {
    color: map.get(variables.$color-map, 'disabled');
    background-color: map.get(variables.$color-map, 'disabled-background');
    border-color: map.get(variables.$color-map, 'disabled-background');
  }

  &.chaise-btn-tertiary {
    color: map.get(variables.$color-map, 'primary');
    border: none;
    background: transparent;

    &[disabled],
    &.disabled {
      color: map.get(variables.$color-map, 'disabled');
    }

    // the link color is more prominent than our button/control color,
    // we should use this class if we want to make the button to be as prominent as links
    &.chaise-btn-link:not([disabled]):not(.disabled) {
      color: map.get(variables.$color-map, 'link');
    }
  }

  &.chaise-btn-default {
    color: map.get(variables.$color-map, 'black');
    border-color: map.get(variables.$color-map, 'border');
  }

  &.chaise-btn-danger {
    color: map.get(variables.$color-map, 'white');
    background-color: map.get(variables.$color-map, 'danger');
    border-color: color.adjust(map.get(variables.$color-map, 'danger'), $lightness: -10%);
  }

  &.chaise-download-btn {
    @include helpers.download-btn();
    border: 0;
    padding: 0;
  }

  &.chaise-btn-no-padding {
    padding: 0;
  }

  // this is currently designed mostly for 
  &.chaise-btn-with-indicator:before {
    content: '';
    background-color: map.get(variables.$color-map, 'primary');
    position: absolute;
    top: -1px;
    right: -1px;
    width: 8px;
    height: 8px;
    border-radius: 50%;
  }
}

//TODO
.btn.btn-primary.btn-inverted[disabled],
.chaise-checkbox input[disabled][type='checkbox'] + label:before {
  color: #ccc !important;
  border-color: #ccc !important;
}

//TODO
.chaise-checkbox input[disabled][type='checkbox']:checked + label:after {
  color: #ccc !important;
}

.dropdown-item.active,
.dropdown-item:active {
  background-color: unset;
}
