# This creates a docker image with chaise and all the test dependencies installed. This can be directly used in a CI for headless testing.
# for more information refer - docs/dev-docs/e2e-test-docker.md
FROM ubuntu:20.04

RUN apt-get update \
    && apt-get install -y wget gnupg \
    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/googlechrome-linux-keyring.gpg \
    && sh -c 'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/googlechrome-linux-keyring.gpg] https://dl-ssl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' \
    && apt-get update \
    && apt-get install -y google-chrome-stable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-khmeros fonts-kacst fonts-freefont-ttf libxss1 dbus dbus-x11 \
      --no-install-recommends \
    && service dbus start \
    && rm -rf /var/lib/apt/lists/* 

RUN apt-get update && \
    apt-get install -y \
    curl \
    make \
    rsync \
    git \
    sudo \
    openjdk-8-jdk 

# Install Node.js 16.x
RUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
RUN apt-get install -y nodejs

# Set the working directory
WORKDIR /app

# Copy chaise codebase
COPY ./chaise /app/chaise

# Install test dependencies
RUN cd chaise && \
    make deps-test

RUN echo 'chaiseuser ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/chaiseuser

RUN groupadd -r chaiseuser && useradd -rm -g chaiseuser -G audio,video chaiseuser && \
    echo 'chaiseuser:test' | chpasswd && \   
    chmod -R 777 /app && \
    chmod -R 777 /home

ENV DBUS_SESSION_BUS_ADDRESS autolaunch:  

ENV DISPLAY host.docker.internal:0.0

USER chaiseuser

# Specify the command to run when the container starts
CMD ["/bin/bash"]
